q
@req.request_method
@req.methods
@req.method
req.method
req.methd
req.REQUEST_METHOD
req
q
@res.set_cookie
@res.methods
@res
trd
q
file
c
q
c
q
Rack::Mime.mime_type(".jpg")
path
File.read("public")
File.read("pubic")
File.read(path)
env
req.path
req
path
pah
File.read("/" +path)
File.read(path)
file
path
c
q
mime_typeq
mime_type
q
mime_type
q
File.extname("public/sdfsdf.txt")
File.extname("sdfsdf.txt")
path[13]
ext
q
Rack::Mime.mime_type(".txt")
req.file
req.path
req
q
res
c
q
req
can_serve?(a.path)
a.path
a
a = Rack::Request.new(env)
Rack::Request.new(env)
Rack:Request.new(env)
@app.path
@app
@req
req
q
file_name
mime_type
c
q
env["PATH_INFO"]
file_path
file_name
file_nam
fle_path
file_anem
c
q
file
read
q
path
q
File.read(path[1..-1])
File.read(path)
path
q
env["PATH_INFO"][1..-1]
env["PATH_INFO"]
env[PATH_INFO]
env[PATH_INFO"]
env[PATH_INFO"
env
q
@app.method_name
@app
env
res
c
q
self
this
app
@app.methods
@app
env
q
e.backtrace
e.methods - "".methods
e
q
e.message.to_a
e.message
e.methods
e.to_a
e
c
value
key
ley 
c
value
key
ley
q
c
shw @flash
@now
@flash
key
c
@now
@flash
c
@now
@flash
c
@now
@store
@flash
c
@now
@flash
c
store
c
store
c
store
c
store
q
@flash
s
@flash
s
req.cookies
req
@flash
c
q
@flash
s
value
key
@flash
c
value
key
q
c
@now
q
FlashNow.now
@now
q
@flash
q
flash
q
@flash
flash
q
@now
q
c
v
key
@flash
q
@now
now
q
y
q
c
@now
q
c
@flash
@FLASH
value
key
q
@flash
q
@flash
well
c
@flash
c
q
@flash
q
@req.cookies
@req
q
@req.q
@req
req
flash.now
@flash
q
c
req
@req
@flash
q
value
key
q
req.cookies
req.params
req.methods - "".methods
req.methods - "".method
req.methods
req.methos
req.cookies
req
c
match_data.captures
match_data.names
route_params
match_data
q
qy
match_data.captures
match_data.names
route_params
match_data
c
proc
&proc
q
res
req
q
